import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as e,d as i,f as l,o as t,r as o}from"./app-aZHNMfWR.js";const h={},r=i("h1",{id:"_1-mongo数据库概述",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#_1-mongo数据库概述"},[i("span",null,"1. Mongo数据库概述")])],-1),d=i("h2",{id:"概述",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#概述"},[i("span",null,"概述")])],-1),p=i("p",null,"MongoDB是一个开源的NoSQL文档数据库，它使用类似JSON的BSON格式来存储数据。MongoDB的设计理念是提供高性能、高可用性和易扩展性的数据库解决方案，适合处理大量的非结构化或半结构化数据。",-1),g=l(`<h2 id="知识要点" tabindex="-1"><a class="header-anchor" href="#知识要点"><span>知识要点</span></a></h2><h3 id="_1-核心概念" tabindex="-1"><a class="header-anchor" href="#_1-核心概念"><span>1. 核心概念</span></a></h3><ul><li><strong>文档(Document)</strong>: MongoDB中最基本的数据单元，类似于关系型数据库中的行，使用BSON格式存储。</li><li><strong>集合(Collection)</strong>: 文档的集合，类似于关系型数据库中的表，但不需要固定的 schema。</li><li><strong>数据库(Database)</strong>: 集合的容器，一个MongoDB实例可以包含多个数据库。</li><li><strong>字段(Field)</strong>: 文档中的键值对，类似于关系型数据库中的列。</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 示例：MongoDB中的文档结构</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;_id&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ObjectId</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;60f7a4b3e9a2c34567890123&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;name&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;张三&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;age&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;address&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;city&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;北京&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;street&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;朝阳区&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  }</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;hobbies&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;读书&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;旅行&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-支持的数据类型" tabindex="-1"><a class="header-anchor" href="#_2-支持的数据类型"><span>2. 支持的数据类型</span></a></h3><ul><li>基本类型: 字符串、数字、布尔值、null</li><li>复杂类型: 数组、对象、日期、正则表达式</li><li>特殊类型: ObjectId、Binary Data、Code、Timestamp</li></ul><h3 id="_3-mongodb的主要优势" tabindex="-1"><a class="header-anchor" href="#_3-mongodb的主要优势"><span>3. MongoDB的主要优势</span></a></h3><ul><li>** schema 灵活性**: 不需要预定义表结构，可以灵活地存储不同结构的数据。</li><li><strong>查询能力</strong>: 支持丰富的查询操作，包括过滤、排序、分页等。</li><li><strong>索引支持</strong>: 支持多种类型的索引，提高查询性能。</li><li><strong>聚合框架</strong>: 提供强大的聚合功能，可以进行复杂的数据处理。</li><li><strong>高可用性</strong>: 通过复制集(replica set)实现高可用性和数据冗余。</li><li><strong>可扩展性</strong>: 通过分片(sharding)实现水平扩展。</li></ul><h2 id="知识扩展" tabindex="-1"><a class="header-anchor" href="#知识扩展"><span>知识扩展</span></a></h2><h3 id="_1-设计思想" tabindex="-1"><a class="header-anchor" href="#_1-设计思想"><span>1. 设计思想</span></a></h3><p>MongoDB的设计思想是拥抱数据的多样性和变化性，不再强制要求数据符合固定的 schema，而是允许数据结构随着应用的发展而演变。这种设计理念使得MongoDB特别适合处理快速变化的业务需求和非结构化数据。</p><h3 id="_2-避坑指南" tabindex="-1"><a class="header-anchor" href="#_2-避坑指南"><span>2. 避坑指南</span></a></h3><ul><li>不要过度使用嵌套文档，这会使查询和更新变得复杂。</li><li>合理设计索引，避免创建过多的索引导致写性能下降。</li><li>注意数据一致性问题，MongoDB默认是最终一致性的。</li><li>对于大量的小文档，考虑使用批量操作来提高性能。</li></ul><h3 id="_3-深度思考题" tabindex="-1"><a class="header-anchor" href="#_3-深度思考题"><span>3. 深度思考题</span></a></h3><ul><li>MongoDB和关系型数据库的主要区别是什么？各自的适用场景是什么？</li><li>什么是CAP定理？MongoDB是如何在CAP之间做出权衡的？</li><li>为什么说MongoDB是无模式的？这带来了哪些优势和挑战？</li></ul><p><strong>深度思考题回答:</strong></p><ul><li>MongoDB和关系型数据库的主要区别在于数据模型、schema灵活性、扩展方式等。关系型数据库适合处理结构化数据、复杂的事务和关联查询；MongoDB适合处理非结构化或半结构化数据、需要快速迭代的业务需求和大规模的数据存储。</li><li>CAP定理指出，一个分布式系统不可能同时满足一致性(Consistency)、可用性(Availability)和分区容错性(Partition Tolerance)。MongoDB在设计上优先考虑了可用性和分区容错性，同时提供了一些机制来提高一致性，如读写关注级别。</li><li>MongoDB的无模式是指不需要预定义表结构，文档可以有不同的字段和结构。这带来的优势是灵活性高、开发效率高；挑战是数据一致性难以保证、查询和索引设计更加复杂。</li></ul>`,17);function k(c,u){const s=o("Mermaid");return t(),a("div",null,[r,d,p,e(s,{id:"mermaid-9",code:"eJxLL0osyFAIceFSAALHaN/8vPR8F6dYBV1dOwWn6GfT2p8tXPxs6oZnveue7pocC1EFlnSO9ssPDvRBFnKJfrl6xrOG5S+a9yILu4KEn/avfz5lBVASWcYt+tmMyc86Vz7dOBUsA5ZKzkksLnZJTVMoLikqTS4pLUpVSMvMybFSNnF2dDM10AEK52enWikbW1i4GjvrJOfn5BdZlWdklqRaI/QrOOo46TjruOi46rghDLLmAgAQa1T1"}),g])}const B=n(h,[["render",k],["__file","1.Mongo数据库概述.html.vue"]]),y=JSON.parse('{"path":"/database/Mongo%E6%95%B0%E6%8D%AE%E5%BA%93/1.Mongo%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0.html","title":"1. Mongo数据库概述","lang":"zh-CN","frontmatter":{"description":"1. Mongo数据库概述 概述 MongoDB是一个开源的NoSQL文档数据库，它使用类似JSON的BSON格式来存储数据。MongoDB的设计理念是提供高性能、高可用性和易扩展性的数据库解决方案，适合处理大量的非结构化或半结构化数据。 知识要点 1. 核心概念 文档(Document): MongoDB中最基本的数据单元，类似于关系型数据库中的行，...","head":[["meta",{"property":"og:url","content":"http://blog.lindaifeng.vip/database/Mongo%E6%95%B0%E6%8D%AE%E5%BA%93/1.Mongo%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"1. Mongo数据库概述"}],["meta",{"property":"og:description","content":"1. Mongo数据库概述 概述 MongoDB是一个开源的NoSQL文档数据库，它使用类似JSON的BSON格式来存储数据。MongoDB的设计理念是提供高性能、高可用性和易扩展性的数据库解决方案，适合处理大量的非结构化或半结构化数据。 知识要点 1. 核心概念 文档(Document): MongoDB中最基本的数据单元，类似于关系型数据库中的行，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-04T08:30:59.000Z"}],["meta",{"property":"article:author","content":"清峰"}],["meta",{"property":"article:modified_time","content":"2025-07-04T08:30:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1. Mongo数据库概述\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-04T08:30:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"清峰\\",\\"url\\":\\"http://blog.lindaifeng.vip/\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"知识要点","slug":"知识要点","link":"#知识要点","children":[{"level":3,"title":"1. 核心概念","slug":"_1-核心概念","link":"#_1-核心概念","children":[]},{"level":3,"title":"2. 支持的数据类型","slug":"_2-支持的数据类型","link":"#_2-支持的数据类型","children":[]},{"level":3,"title":"3. MongoDB的主要优势","slug":"_3-mongodb的主要优势","link":"#_3-mongodb的主要优势","children":[]}]},{"level":2,"title":"知识扩展","slug":"知识扩展","link":"#知识扩展","children":[{"level":3,"title":"1. 设计思想","slug":"_1-设计思想","link":"#_1-设计思想","children":[]},{"level":3,"title":"2. 避坑指南","slug":"_2-避坑指南","link":"#_2-避坑指南","children":[]},{"level":3,"title":"3. 深度思考题","slug":"_3-深度思考题","link":"#_3-深度思考题","children":[]}]}],"git":{"createdTime":1751617859000,"updatedTime":1751617859000,"contributors":[{"name":"ldf","email":"1305366530@qq.com","commits":1}]},"readingTime":{"minutes":3.17,"words":950},"filePathRelative":"database/Mongo数据库/1.Mongo数据库概述.md","localizedDate":"2025年7月4日","autoDesc":true,"excerpt":"\\n<h2>概述</h2>\\n<p>MongoDB是一个开源的NoSQL文档数据库，它使用类似JSON的BSON格式来存储数据。MongoDB的设计理念是提供高性能、高可用性和易扩展性的数据库解决方案，适合处理大量的非结构化或半结构化数据。</p>\\n<h2>知识要点</h2>\\n<h3>1. 核心概念</h3>\\n<ul>\\n<li><strong>文档(Document)</strong>: MongoDB中最基本的数据单元，类似于关系型数据库中的行，使用BSON格式存储。</li>\\n<li><strong>集合(Collection)</strong>: 文档的集合，类似于关系型数据库中的表，但不需要固定的 schema。</li>\\n<li><strong>数据库(Database)</strong>: 集合的容器，一个MongoDB实例可以包含多个数据库。</li>\\n<li><strong>字段(Field)</strong>: 文档中的键值对，类似于关系型数据库中的列。</li>\\n</ul>"}');export{B as comp,y as data};
