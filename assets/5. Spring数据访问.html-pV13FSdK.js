import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as l,d as i,f as e,o as t,r as h}from"./app-D1ifS0UH.js";const p={},k=i("h1",{id:"_5-spring数据访问",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#_5-spring数据访问"},[i("span",null,"5. Spring数据访问")])],-1),r=i("h2",{id:"概述",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#概述"},[i("span",null,"概述")])],-1),d=i("p",null,"数据访问是企业级应用程序开发中的重要部分，Spring提供了全面的数据访问支持，包括对JDBC、ORM框架（如Hibernate、MyBatis）等的支持。Spring的数据访问模块简化了数据访问的过程，使得开发者可以专注于业务逻辑，而不是数据访问的细节。",-1),g=e(`<h2 id="知识要点" tabindex="-1"><a class="header-anchor" href="#知识要点"><span>知识要点</span></a></h2><h3 id="_1-jdbc支持" tabindex="-1"><a class="header-anchor" href="#_1-jdbc支持"><span>1. JDBC支持</span></a></h3><ul><li><strong>JdbcTemplate</strong>: 是Spring提供的一个JDBC模板类，它简化了JDBC的使用。</li><li><strong>NamedParameterJdbcTemplate</strong>: 是JdbcTemplate的扩展，它支持命名参数。</li><li><strong>SimpleJdbcInsert</strong>和<strong>SimpleJdbcCall</strong>: 简化了插入和存储过程的调用。</li></ul><h3 id="_2-orm框架集成" tabindex="-1"><a class="header-anchor" href="#_2-orm框架集成"><span>2. ORM框架集成</span></a></h3><ul><li><strong>Hibernate</strong>: 是一个流行的ORM框架，Spring提供了对Hibernate的集成支持。</li><li><strong>MyBatis</strong>: 是另一个流行的ORM框架，Spring也提供了对MyBatis的集成支持。</li><li><strong>JPA</strong>: 是Java持久化API，Spring提供了对JPA的集成支持。</li></ul><h3 id="_3-代码示例" tabindex="-1"><a class="header-anchor" href="#_3-代码示例"><span>3. 代码示例</span></a></h3><h4 id="jdbctemplate的使用" tabindex="-1"><a class="header-anchor" href="#jdbctemplate的使用"><span>JdbcTemplate的使用</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Service</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> UserService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Autowired</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> JdbcTemplate</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> jdbcTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> saveUser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">User</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        jdbcTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;INSERT INTO user (name, age) VALUES (?, ?)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(), </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getAge</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> User</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> getUserById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> jdbcTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">queryForObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;SELECT * FROM user WHERE id = ?&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[]{id}, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> BeanPropertyRowMapper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">User</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置数据源" tabindex="-1"><a class="header-anchor" href="#配置数据源"><span>配置数据源</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Configuration</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> DataSourceConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> DataSource</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        DriverManagerDataSource</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> DriverManagerDataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setDriverClassName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;com.mysql.jdbc.Driver&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;jdbc:mysql://localhost:3306/test&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setUsername</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;root&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setPassword</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;password&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dataSource;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> JdbcTemplate</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> jdbcTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">DataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> JdbcTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(dataSource);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="mybatis的集成" tabindex="-1"><a class="header-anchor" href="#mybatis的集成"><span>MyBatis的集成</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Configuration</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">MapperScan</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;com.example.mapper&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> MyBatisConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> SqlSessionFactory</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sqlSessionFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">DataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        SqlSessionFactoryBean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> factoryBean</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> SqlSessionFactoryBean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        factoryBean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setDataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(dataSource);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> factoryBean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-数据源管理" tabindex="-1"><a class="header-anchor" href="#_4-数据源管理"><span>4. 数据源管理</span></a></h3><ul><li><strong>DataSource</strong>: 是JDBC的标准接口，它提供了获取数据库连接的方法。</li><li><strong>Spring提供的DataSource实现</strong>: 包括DriverManagerDataSource、SimpleDriverDataSource、ComboPooledDataSource等。</li><li><strong>连接池</strong>: 是一种优化数据库连接使用的技术，它可以重用数据库连接，避免频繁地创建和关闭连接。</li></ul><h2 id="知识扩展" tabindex="-1"><a class="header-anchor" href="#知识扩展"><span>知识扩展</span></a></h2><h3 id="设计思想" tabindex="-1"><a class="header-anchor" href="#设计思想"><span>设计思想</span></a></h3><p>Spring的数据访问设计思想是简化数据访问，它通过提供模板类（如JdbcTemplate）和集成支持（如对Hibernate、MyBatis的集成），使得开发者可以专注于业务逻辑，而不是数据访问的细节。</p><h3 id="避坑指南" tabindex="-1"><a class="header-anchor" href="#避坑指南"><span>避坑指南</span></a></h3><ul><li>尽量使用Spring提供的模板类（如JdbcTemplate），而不是直接使用JDBC。</li><li>注意连接池的配置，避免连接池过小或过大。</li><li>注意事务的边界，避免将不必要的操作包含在事务中。</li><li>避免在数据访问层中包含业务逻辑，保持数据访问层的简洁。</li></ul><h3 id="深度思考题" tabindex="-1"><a class="header-anchor" href="#深度思考题"><span>深度思考题</span></a></h3><p><strong>深度思考题:</strong> 为什么说JdbcTemplate简化了JDBC的使用？ <strong>思考题回答:</strong> JdbcTemplate简化了JDBC的使用，因为它处理了JDBC的样板代码（如创建连接、创建语句、关闭连接等），使得开发者可以专注于SQL查询和结果处理。此外，JdbcTemplate还处理了异常，使得开发者不需要手动捕获和处理SQL异常。</p><p><strong>深度思考题:</strong> 什么是连接池？它有什么优点？ <strong>思考题回答:</strong> 连接池是一种优化数据库连接使用的技术，它可以重用数据库连接，避免频繁地创建和关闭连接。连接池的优点包括：</p><ul><li>提高性能：避免频繁地创建和关闭连接。</li><li>资源管理：控制数据库连接的数量，避免资源浪费。</li><li>稳定性：避免因数据库连接过多而导致的数据库服务器崩溃。</li></ul>`,23);function B(c,A){const s=h("Mermaid");return t(),n("div",null,[k,r,d,l(s,{id:"mermaid-9",code:"eJxLL0osyFAIceFSAALH6GdTNzzrXfdi3f6X09fFKujq2ik4RXu5ODk/m7L+WU9jLEQVWNw52j/I99nCtmfztr2c3fasYwKypEv0k13dT7sWPl+38PmENmQZV6gVz3ZNgEmCZZNzEouLXVLTFIpLikqTS0qLUhXSMnNyrJRNnB3dTA10gML52alWysYWFq7GzjrJ+Tn5RVblGZklqdao+hNz0vOLMksycqH6jQwtzdyM4foNXEzMHQ1R9SMMADoSbj+SuQpOOs46LjquCMOtuQBqdXEx"}),g])}const u=a(p,[["render",B],["__file","5. Spring数据访问.html.vue"]]),m=JSON.parse('{"path":"/frame/spring/5.%20Spring%E6%95%B0%E6%8D%AE%E8%AE%BF%E9%97%AE.html","title":"5. Spring数据访问","lang":"zh-CN","frontmatter":{"description":"5. Spring数据访问 概述 数据访问是企业级应用程序开发中的重要部分，Spring提供了全面的数据访问支持，包括对JDBC、ORM框架（如Hibernate、MyBatis）等的支持。Spring的数据访问模块简化了数据访问的过程，使得开发者可以专注于业务逻辑，而不是数据访问的细节。 知识要点 1. JDBC支持 JdbcTemplate: 是S...","head":[["meta",{"property":"og:url","content":"http://blog.lindaifeng.vip/frame/spring/5.%20Spring%E6%95%B0%E6%8D%AE%E8%AE%BF%E9%97%AE.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"5. Spring数据访问"}],["meta",{"property":"og:description","content":"5. Spring数据访问 概述 数据访问是企业级应用程序开发中的重要部分，Spring提供了全面的数据访问支持，包括对JDBC、ORM框架（如Hibernate、MyBatis）等的支持。Spring的数据访问模块简化了数据访问的过程，使得开发者可以专注于业务逻辑，而不是数据访问的细节。 知识要点 1. JDBC支持 JdbcTemplate: 是S..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-04T08:30:59.000Z"}],["meta",{"property":"article:author","content":"清峰"}],["meta",{"property":"article:modified_time","content":"2025-07-04T08:30:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5. Spring数据访问\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-04T08:30:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"清峰\\",\\"url\\":\\"http://blog.lindaifeng.vip/\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"知识要点","slug":"知识要点","link":"#知识要点","children":[{"level":3,"title":"1. JDBC支持","slug":"_1-jdbc支持","link":"#_1-jdbc支持","children":[]},{"level":3,"title":"2. ORM框架集成","slug":"_2-orm框架集成","link":"#_2-orm框架集成","children":[]},{"level":3,"title":"3. 代码示例","slug":"_3-代码示例","link":"#_3-代码示例","children":[]},{"level":3,"title":"4. 数据源管理","slug":"_4-数据源管理","link":"#_4-数据源管理","children":[]}]},{"level":2,"title":"知识扩展","slug":"知识扩展","link":"#知识扩展","children":[{"level":3,"title":"设计思想","slug":"设计思想","link":"#设计思想","children":[]},{"level":3,"title":"避坑指南","slug":"避坑指南","link":"#避坑指南","children":[]},{"level":3,"title":"深度思考题","slug":"深度思考题","link":"#深度思考题","children":[]}]}],"git":{"createdTime":1751617859000,"updatedTime":1751617859000,"contributors":[{"name":"ldf","email":"1305366530@qq.com","commits":1}]},"readingTime":{"minutes":2.92,"words":876},"filePathRelative":"frame/spring/5. Spring数据访问.md","localizedDate":"2025年7月4日","autoDesc":true,"excerpt":"\\n<h2>概述</h2>\\n<p>数据访问是企业级应用程序开发中的重要部分，Spring提供了全面的数据访问支持，包括对JDBC、ORM框架（如Hibernate、MyBatis）等的支持。Spring的数据访问模块简化了数据访问的过程，使得开发者可以专注于业务逻辑，而不是数据访问的细节。</p>\\n<h2>知识要点</h2>\\n<h3>1. JDBC支持</h3>\\n<ul>\\n<li><strong>JdbcTemplate</strong>: 是Spring提供的一个JDBC模板类，它简化了JDBC的使用。</li>\\n<li><strong>NamedParameterJdbcTemplate</strong>: 是JdbcTemplate的扩展，它支持命名参数。</li>\\n<li><strong>SimpleJdbcInsert</strong>和<strong>SimpleJdbcCall</strong>: 简化了插入和存储过程的调用。</li>\\n</ul>"}');export{u as comp,m as data};
