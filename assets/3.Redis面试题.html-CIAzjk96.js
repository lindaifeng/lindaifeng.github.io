import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as s,f as t}from"./app-yhW6njzi.js";const a={},r=t(`<h1 id="_3-redis面试题" tabindex="-1"><a class="header-anchor" href="#_3-redis面试题"><span>3. Redis面试题</span></a></h1><h2 id="企业级解决方案" tabindex="-1"><a class="header-anchor" href="#企业级解决方案"><span>企业级解决方案</span></a></h2><h3 id="缓存预热" tabindex="-1"><a class="header-anchor" href="#缓存预热"><span>缓存预热</span></a></h3><p><strong>场景</strong>：“宕机”</p><p>服务器启动后迅速宕机</p><p><strong>问题排查</strong>：</p><p>1.请求数量较高，大量的请求过来之后都需要去从缓存中获取数据，但是缓存中又没有，此时从数据库中查找数据然后将数据再存入缓存，造成了短期内对redis的高强度操作从而导致问题</p><p>2.主从之间数据吞吐量较大，数据同步操作频度较高</p><p><strong>解决方案：</strong></p><ul><li>前置准备工作：</li></ul><p>1.日常例行统计数据访问记录，统计访问频度较高的热点数据</p><p>2.利用LRU数据删除策略，构建数据留存队列例如：storm与kafka配合</p><ul><li>准备工作：</li></ul><p>1.将统计结果中的数据分类，根据级别，redis优先加载级别较高的热点数据</p><p>2.利用分布式多服务器同时进行数据读取，提速数据加载过程</p><p>3.热点数据主从同时预热</p><ul><li>实施：</li></ul><p>4.使用脚本程序固定触发数据预热过程</p><p>5.如果条件允许，使用了CDN（内容分发网络），效果会更好</p><p><strong>总的来说</strong>：缓存预热就是系统启动前，提前将相关的缓存数据直接加载到缓存系统。避免在用户请求的时候，先查询数据库，然后再将数据缓存的问题！用户直接查询事先被预热的缓存数据！</p><h3 id="缓存雪崩" tabindex="-1"><a class="header-anchor" href="#缓存雪崩"><span>缓存雪崩</span></a></h3><p><strong>场景</strong>：数据库服务器崩溃，一连串的场景会随之儿来</p><p>1.系统平稳运行过程中，忽然数据库连接量激增</p><p>2.应用服务器无法及时处理请求</p><p>3.大量408，500错误页面出现</p><p>4.客户反复刷新页面获取数据</p><p>5.数据库崩溃</p><p>6.应用服务器崩溃</p><p>7.重启应用服务器无效</p><p>8.Redis服务器崩溃</p><p>9.Redis集群崩溃</p><p>10.重启数据库后再次被瞬间流量放倒</p><p><strong>问题排查</strong>：</p><p>1.在一个较短的时间内，缓存中较多的key集中过期</p><p>2.此周期内请求访问过期的数据，redis未命中，redis向数据库获取数据</p><p>3.数据库同时接收到大量的请求无法及时处理</p><p>4.Redis大量请求被积压，开始出现超时现象</p><p>5.数据库流量激增，数据库崩溃</p><p>6.重启后仍然面对缓存中无数据可用</p><p>7.Redis服务器资源被严重占用，Redis服务器崩溃</p><p>8.Redis集群呈现崩塌，集群瓦解</p><p>9.应用服务器无法及时得到数据响应请求，来自客户端的请求数量越来越多，应用服务器崩溃</p><p>10.应用服务器，redis，数据库全部重启，效果不理想</p><p>总而言之就两点：短时间范围内，大量key集中过期</p><p><strong>解决方案</strong></p><ul><li>思路：</li></ul><p>1.更多的页面静态化处理</p><p>2.构建多级缓存架构</p><pre><code>Nginx缓存+redis缓存+ehcache缓存
</code></pre><p>3.检测Mysql严重耗时业务进行优化</p><pre><code>对数据库的瓶颈排查：例如超时查询、耗时较高事务等
</code></pre><p>4.灾难预警机制</p><pre><code>监控redis服务器性能指标

	CPU占用、CPU使用率

	内存容量

	查询平均响应时间

	线程数
</code></pre><p>5.限流、降级</p><p>短时间范围内牺牲一些客户体验，限制一部分请求访问，降低应用服务器压力，待业务低速运转后再逐步放开访问</p><ul><li>落地实践：</li></ul><p>1.LRU与LFU切换</p><p>2.数据有效期策略调整</p><pre><code>根据业务数据有效期进行分类错峰，A类90分钟，B类80分钟，C类70分钟

过期时间使用固定时间+随机值的形式，稀释集中到期的key的数量
</code></pre><p>3.超热数据使用永久key</p><p>4.定期维护（自动+人工）</p><pre><code>对即将过期数据做访问量分析，确认是否延时，配合访问量统计，做热点数据的延时
</code></pre><p>5.加锁：慎用！</p><p><strong>总的来说</strong>：缓存雪崩就是瞬间过期数据量太大，导致对数据库服务器造成压力。如能够有效避免过期时间集中，可以有效解决雪崩现象的 出现（约40%），配合其他策略一起使用，并监控服务器的运行数据，根据运行记录做快速调整。</p><h3 id="缓存击穿" tabindex="-1"><a class="header-anchor" href="#缓存击穿"><span>缓存击穿</span></a></h3><p><strong>场景</strong>：还是数据库服务器崩溃，但是跟之前的场景有点不太一样</p><p>1.系统平稳运行过程中</p><p>2.数据库连接量瞬间激增</p><p>3.Redis服务器无大量key过期</p><p>4.Redis内存平稳，无波动</p><p>5.Redis服务器CPU正常</p><p>6.数据库崩溃</p><p><strong>问题排查：</strong></p><p>1.Redis中某个key过期，该key访问量巨大</p><p>2.多个数据请求从服务器直接压到Redis后，均未命中</p><p>3.Redis在短时间内发起了大量对数据库中同一数据的访问</p><p>总而言之就两点：单个key高热数据，key过期</p><p><strong>解决方案</strong>：</p><p>1.预先设定</p><p>以电商为例，每个商家根据店铺等级，指定若干款主打商品，在购物节期间，加大此类信息key的过期时长 注意：购物节不仅仅指当天，以及后续若干天，访问峰值呈现逐渐降低的趋势</p><p>2.现场调整</p><pre><code>监控访问量，对自然流量激增的数据延长过期时间或设置为永久性key
</code></pre><p>3.后台刷新数据</p><pre><code>启动定时任务，高峰期来临之前，刷新数据有效期，确保不丢失
</code></pre><p>4.二级缓存</p><pre><code>设置不同的失效时间，保障不会被同时淘汰就行
</code></pre><p>5.加锁</p><pre><code>分布式锁，防止被击穿，但是要注意也是性能瓶颈，慎重！
</code></pre><p><strong>总的来说</strong>：缓存击穿就是单个高热数据过期的瞬间，数据访问量较大，未命中redis后，发起了大量对同一数据的数据库访问，导致对数 据库服务器造成压力。应对策略应该在业务数据分析与预防方面进行，配合运行监控测试与即时调整策略，毕竟单个key的过 期监控难度较高，配合雪崩处理策略即可。</p><h3 id="缓存穿透" tabindex="-1"><a class="header-anchor" href="#缓存穿透"><span>缓存穿透</span></a></h3><p><strong>场景</strong>：数据库服务器又崩溃了，跟之前的一样吗？</p><p>1.系统平稳运行过程中</p><p>2.应用服务器流量随时间增量较大</p><p>3.Redis服务器命中率随时间逐步降低</p><p>4.Redis内存平稳，内存无压力</p><p>5.Redis服务器CPU占用激增</p><p>6.数据库服务器压力激增</p><p>7.数据库崩溃</p><p><strong>问题排查：</strong></p><p>1.Redis中大面积出现未命中</p><p>2.出现非正常URL访问</p><p><strong>问题分析</strong>：</p><ul><li>获取的数据在数据库中也不存在，数据库查询未得到对应数据</li><li>Redis获取到null数据未进行持久化，直接返回</li><li>下次此类数据到达重复上述过程</li><li>出现黑客攻击服务器</li></ul><p><strong>解决方案</strong>：</p><p>1.缓存null</p><pre><code>对查询结果为null的数据进行缓存（长期使用，定期清理），设定短时限，例如30-60秒，最高5分钟
</code></pre><p>2.白名单策略</p><p>提前预热各种分类数据id对应的bitmaps，id作为bitmaps的offset，相当于设置了数据白名单。当加载正常数据时放行，加载异常数据时直接拦截（效率偏低）</p><p>使用布隆过滤器（有关布隆过滤器的命中问题对当前状况可以忽略）</p><p>2.实施监控</p><pre><code>实时监控redis命中率（业务正常范围时，通常会有一个波动值）与null数据的占比

	非活动时段波动：通常检测3-5倍，超过5倍纳入重点排查对象

	活动时段波动：通常检测10-50倍，超过50倍纳入重点排查对象

根据倍数不同，启动不同的排查流程。然后使用黑名单进行防控（运营）
</code></pre><p>4.key加密</p><pre><code>问题出现后，临时启动防灾业务key，对key进行业务层传输加密服务，设定校验程序，过来的key校验

例如每天随机分配60个加密串，挑选2到3个，混淆到页面数据id中，发现访问key不满足规则，驳回数据访问
</code></pre><p><strong>总的来说</strong>：缓存击穿是指访问了不存在的数据，跳过了合法数据的redis数据缓存阶段，每次访问数据库，导致对数据库服务器造成压力。通常此类数据的出现量是一个较低的值，当出现此类情况以毒攻毒，并及时报警。应对策略应该在临时预案防范方面多做文章。</p><p>无论是黑名单还是白名单，都是对整体系统的压力，警报解除后尽快移除。</p><h3 id="性能指标监控" tabindex="-1"><a class="header-anchor" href="#性能指标监控"><span>性能指标监控</span></a></h3><p>redis中的监控指标如下：</p><ul><li>性能指标：Performance</li></ul><blockquote><p>响应请求的平均时间:</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">latency</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>平均每秒处理请求总数</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">instantaneous_ops_per_sec</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>缓存查询命中率（通过查询总次数与查询得到非nil数据总次数计算而来）</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">hit_rate(calculated)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></blockquote><ul><li>内存指标：Memory</li></ul><blockquote><p>当前内存使用量</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">used_memory</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>内存碎片率（关系到是否进行碎片整理）</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">mem_fragmentation_ratio</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>为避免内存溢出删除的key的总数量</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">evicted_keys</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>基于阻塞操作（BLPOP等）影响的客户端数量</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">blocked_clients</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></blockquote><ul><li>基本活动指标：Basic_activity</li></ul><blockquote><p>当前客户端连接总数</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">connected_clients</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当前连接slave总数</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">connected_slaves</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>最后一次主从信息交换距现在的秒</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">master_last_io_seconds_ago</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>key的总数</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">keyspace</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></blockquote><ul><li>持久性指标：Persistence</li></ul><blockquote><p>当前服务器最后一次RDB持久化的时间</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">rdb_last_save_time</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当前服务器最后一次RDB持久化后数据变化总量</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">rdb_changes_since_last_save</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></blockquote><ul><li>错误指标：Error</li></ul><blockquote><p>被拒绝连接的客户端总数（基于达到最大连接值的因素）</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">rejected_connections</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>key未命中的总次数</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">keyspace_misses</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>主从断开的秒数</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">master_link_down_since_seconds</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></blockquote><p>要对redis的相关指标进行监控，我们可以采用一些用具：</p><ul><li>CloudInsight Redis</li><li>Prometheus</li><li>Redis-stat</li><li>Redis-faina</li><li>RedisLive</li><li>zabbix</li></ul><p>也有一些命令工具：</p><ul><li>benchmark</li></ul><blockquote><p>测试当前服务器的并发性能</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">redis-benchmark [-h ] [-p ] [-c ] [-n &lt;requests]&gt; [-k ]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>范例1：50个连接，10000次请求对应的性能</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">redis-benchmark</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>范例2：100个连接，5000次请求对应的性能</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">redis-benchmark -c 100 -n 5000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="http://img.lindaifeng.vip/typora-picgo-tuchaung/29.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></blockquote><ul><li><p>redis-cli</p><p>monitor：启动服务器调试信息</p></li></ul><blockquote><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">monitor</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></blockquote><pre><code>slowlog：慢日志
</code></pre><blockquote><p>获取慢查询日志</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">slowlog [operator]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>get ：获取慢查询日志信息</p><p>len ：获取慢查询日志条目数</p><p>reset ：重置慢查询日志</p><p>相关配置</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">slowlog-log-slower-than 1000 </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#设置慢查询的时间下线，单位：微妙</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">slowlog-max-len 100	</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#设置慢查询命令对应的日志显示长度，单位：命令数</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>`,136),p=[r];function l(n,d){return s(),i("div",null,p)}const c=e(a,[["render",l],["__file","3.Redis面试题.html.vue"]]),k=JSON.parse('{"path":"/database/Redis%E6%95%B0%E6%8D%AE%E5%BA%93/3.Redis%E9%9D%A2%E8%AF%95%E9%A2%98.html","title":"3. Redis面试题","lang":"zh-CN","frontmatter":{"description":"3. Redis面试题 企业级解决方案 缓存预热 场景：“宕机” 服务器启动后迅速宕机 问题排查： 1.请求数量较高，大量的请求过来之后都需要去从缓存中获取数据，但是缓存中又没有，此时从数据库中查找数据然后将数据再存入缓存，造成了短期内对redis的高强度操作从而导致问题 2.主从之间数据吞吐量较大，数据同步操作频度较高 解决方案： 前置准备工作： 1...","head":[["meta",{"property":"og:url","content":"http://blog.lindaifeng.vip/database/Redis%E6%95%B0%E6%8D%AE%E5%BA%93/3.Redis%E9%9D%A2%E8%AF%95%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"3. Redis面试题"}],["meta",{"property":"og:description","content":"3. Redis面试题 企业级解决方案 缓存预热 场景：“宕机” 服务器启动后迅速宕机 问题排查： 1.请求数量较高，大量的请求过来之后都需要去从缓存中获取数据，但是缓存中又没有，此时从数据库中查找数据然后将数据再存入缓存，造成了短期内对redis的高强度操作从而导致问题 2.主从之间数据吞吐量较大，数据同步操作频度较高 解决方案： 前置准备工作： 1..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://img.lindaifeng.vip/typora-picgo-tuchaung/29.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-04T08:30:59.000Z"}],["meta",{"property":"article:author","content":"清峰"}],["meta",{"property":"article:modified_time","content":"2025-07-04T08:30:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3. Redis面试题\\",\\"image\\":[\\"http://img.lindaifeng.vip/typora-picgo-tuchaung/29.png\\"],\\"dateModified\\":\\"2025-07-04T08:30:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"清峰\\",\\"url\\":\\"http://blog.lindaifeng.vip/\\"}]}"]]},"headers":[{"level":2,"title":"企业级解决方案","slug":"企业级解决方案","link":"#企业级解决方案","children":[{"level":3,"title":"缓存预热","slug":"缓存预热","link":"#缓存预热","children":[]},{"level":3,"title":"缓存雪崩","slug":"缓存雪崩","link":"#缓存雪崩","children":[]},{"level":3,"title":"缓存击穿","slug":"缓存击穿","link":"#缓存击穿","children":[]},{"level":3,"title":"缓存穿透","slug":"缓存穿透","link":"#缓存穿透","children":[]},{"level":3,"title":"性能指标监控","slug":"性能指标监控","link":"#性能指标监控","children":[]}]}],"git":{"createdTime":1730107979000,"updatedTime":1751617859000,"contributors":[{"name":"ldf","email":"1305366530@qq.com","commits":1}]},"readingTime":{"minutes":9.24,"words":2773},"filePathRelative":"database/Redis数据库/3.Redis面试题.md","localizedDate":"2024年10月28日","autoDesc":true,"excerpt":"\\n<h2>企业级解决方案</h2>\\n<h3>缓存预热</h3>\\n<p><strong>场景</strong>：“宕机”</p>\\n<p>服务器启动后迅速宕机</p>\\n<p><strong>问题排查</strong>：</p>\\n<p>1.请求数量较高，大量的请求过来之后都需要去从缓存中获取数据，但是缓存中又没有，此时从数据库中查找数据然后将数据再存入缓存，造成了短期内对redis的高强度操作从而导致问题</p>\\n<p>2.主从之间数据吞吐量较大，数据同步操作频度较高</p>\\n<p><strong>解决方案：</strong></p>\\n<ul>\\n<li>前置准备工作：</li>\\n</ul>\\n<p>1.日常例行统计数据访问记录，统计访问频度较高的热点数据</p>"}');export{c as comp,k as data};
