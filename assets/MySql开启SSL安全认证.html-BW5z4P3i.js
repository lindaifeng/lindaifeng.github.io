import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as a,f as n}from"./app-CZ-mCzec.js";const i={},l=n(`<h1 id="mysql之开启ssl安全认证" tabindex="-1"><a class="header-anchor" href="#mysql之开启ssl安全认证"><span>MySql之开启SSL安全认证</span></a></h1><p><strong>【思考】：为什么要开启ssl认证？</strong></p><p><strong>SSL</strong>（Secure Socket Layer：安全套接字层）利用数据加密、身份验证和消息完整性验证机制，为基于TCP等可靠连接的应用层协议提供安全性保证。</p><blockquote><p>SSL协议提供的功能主要有：</p><p>1、 数据传输的机密性：利用对称密钥算法对传输的数据进行加密。 2.、身份验证机制：基于证书利用数字签名方法对服务器和客户端进行身份验证，其中客户端的身份验证是可选的。 3、 消息完整性验证：消息传输过程中使用MAC算法来检验消息的完整性。</p><p>如果用户的传输不是通过SSL的方式，那么其在网络中数据都是以明文进行传输的，而这给别有用心的人带来了可乘之机。所以，现在很多大型网站都开启了SSL功能。同样地，在我们数据库方面，如果客户端连接服务器获取数据不是使用SSL连接，那么在传输过程中，数据就有可能被窃取。</p></blockquote><p><strong>【测试方式】在MySQL服务器端通过tshark抓包的方式来模拟窃取数据。验证、对比，未使用SSL和使用SSL两者在安全性上有什么不同？</strong></p><p>1、未使用SSL和使用SSL安全性对比</p><p>1）未使用ssl：在客户端上对数据库做插入数据操作。服务端进行抓包</p><figure><img src="https://gitee.com/lindaifeng/my-images/raw/master/img/818283-20170621182629820-1095511691.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><figure><img src="https://gitee.com/lindaifeng/my-images/raw/master/img/818283-20170621182714210-1420612562.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p><strong>【结论】未使用SSL情况下，在数据库服务器端可以通过抓包的方式获取数据，安全性不高。</strong></p><p>2）使用ssl：与上述同样的操作。</p><figure><img src="https://gitee.com/lindaifeng/my-images/raw/master/img/818283-20170621183247554-1671875359.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><figure><img src="https://gitee.com/lindaifeng/my-images/raw/master/img/818283-20170621183434241-1944183268.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p><strong>【结论】没有抓到该语句，采用SSL加密后，tshark抓不到数据，安全性高。</strong></p><h2 id="二、mysql5-7-ssl的配置与启用" tabindex="-1"><a class="header-anchor" href="#二、mysql5-7-ssl的配置与启用"><span>二、Mysql5.7 SSL的配置与启用</span></a></h2><p>在MySQL5.7安装初始化阶段，我们发现比之前版本多了一步操作，而这个操作就是安装SSL的。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>shell&gt; bin/mysqld --initialize --user=mysql    # MySQL 5.7.6 and up</span></span>
<span class="line"><span>shell&gt; bin/mysql_ssl_rsa_setup                 # MySQL 5.7.6 and up</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>当运行完这个命令后，默认会在data_dir目录下生成以下pem文件，这些文件就是用于启用SSL功能的：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[root mysql_data]# ll *.pem</span></span>
<span class="line"><span>-rw------- 1 mysql mysql 1675 Jun 12 17:22 ca-key.pem         #CA私钥</span></span>
<span class="line"><span>-rw-r--r-- 1 mysql mysql 1074 Jun 12 17:22 ca.pem             #自签的CA证书，客户端连接也需要提供</span></span>
<span class="line"><span>-rw-r--r-- 1 mysql mysql 1078 Jun 12 17:22 client-cert.pem    #客户端连接服务器端需要提供的证书文件</span></span>
<span class="line"><span>-rw------- 1 mysql mysql 1675 Jun 12 17:22 client-key.pem     #客户端连接服务器端需要提供的私钥文件-rw------- 1 mysql mysql 1675 Jun 12 17:22 private_key.pem    #私钥/公钥对的私有成员-rw-r--r-- 1 mysql mysql 451 Jun 12 17:22  public_key.pem     #私钥/公钥对的共有成员-rw-r--r-- 1 mysql mysql 1078 Jun 12 17:22 server-cert.pem    #服务器端证书文件-rw------- 1 mysql mysql 1675 Jun 12 17:22 server-key.pem     #服务器端私钥文件</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这时从数据库服务器本地进入MySQL命令行，你可以看到如下变量值：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>root&gt; mysql -h 10.126.xxx.xxx -udba -p</span></span>
<span class="line"><span></span></span>
<span class="line"><span>###查看SSL开启情况</span></span>
<span class="line"><span>dba:(none)&gt; show global variables like &#39;%ssl%&#39;;</span></span>
<span class="line"><span>+---------------+-----------------+</span></span>
<span class="line"><span>| Variable_name | Value           |</span></span>
<span class="line"><span>+---------------+-----------------+</span></span>
<span class="line"><span>| have_openssl  | YES             |</span></span>
<span class="line"><span>| have_ssl      | YES             |    #已经开启了SSL</span></span>
<span class="line"><span>| ssl_ca        | ca.pem          |</span></span>
<span class="line"><span>| ssl_capath    |                 |</span></span>
<span class="line"><span>| ssl_cert      | server-cert.pem |</span></span>
<span class="line"><span>| ssl_cipher    |                 |</span></span>
<span class="line"><span>| ssl_crl       |                 |</span></span>
<span class="line"><span>| ssl_crlpath   |                 |</span></span>
<span class="line"><span>| ssl_key       | server-key.pem  |</span></span>
<span class="line"><span>+---------------+-----------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>【注意】：如果用户是采用本地localhost或者sock连接数据库，那么不会使用SSL方式了</strong></p><h2 id="三、配置ssl安全认证" tabindex="-1"><a class="header-anchor" href="#三、配置ssl安全认证"><span>三、配置SSL安全认证</span></a></h2><p>如果安装MySQL57时没有运行过mysql_ssl_rsa_setup，那么如何开启SSL呢？</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>1)、关闭MySQL服务</span></span>
<span class="line"><span>2)、运行mysql_ssl_rsa_setup 命令</span></span>
<span class="line"><span>3)、到data_dir目录下修改.pem文件的所属权限用户为mysql</span></span>
<span class="line"><span>    chown -R mysql.mysql *.pem</span></span>
<span class="line"><span>4)、启动MySQL服务</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25),t=[l];function p(r,c){return a(),e("div",null,t)}const o=s(i,[["render",p],["__file","MySql开启SSL安全认证.html.vue"]]),g=JSON.parse('{"path":"/database/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93/MySql%E5%BC%80%E5%90%AFSSL%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81.html","title":"MySql开启SSL安全认证","lang":"zh-CN","frontmatter":{"title":"MySql开启SSL安全认证","order":4,"description":"MySql之开启SSL安全认证 【思考】：为什么要开启ssl认证？ SSL（Secure Socket Layer：安全套接字层）利用数据加密、身份验证和消息完整性验证机制，为基于TCP等可靠连接的应用层协议提供安全性保证。 SSL协议提供的功能主要有： 1、 数据传输的机密性：利用对称密钥算法对传输的数据进行加密。 2.、身份验证机制：基于证书利用数...","head":[["meta",{"property":"og:url","content":"http://blog.lindaifeng.vip/database/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93/MySql%E5%BC%80%E5%90%AFSSL%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"MySql开启SSL安全认证"}],["meta",{"property":"og:description","content":"MySql之开启SSL安全认证 【思考】：为什么要开启ssl认证？ SSL（Secure Socket Layer：安全套接字层）利用数据加密、身份验证和消息完整性验证机制，为基于TCP等可靠连接的应用层协议提供安全性保证。 SSL协议提供的功能主要有： 1、 数据传输的机密性：利用对称密钥算法对传输的数据进行加密。 2.、身份验证机制：基于证书利用数..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://gitee.com/lindaifeng/my-images/raw/master/img/818283-20170621182629820-1095511691.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-11T03:57:59.000Z"}],["meta",{"property":"article:author","content":"清峰"}],["meta",{"property":"article:modified_time","content":"2024-09-11T03:57:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySql开启SSL安全认证\\",\\"image\\":[\\"https://gitee.com/lindaifeng/my-images/raw/master/img/818283-20170621182629820-1095511691.png\\",\\"https://gitee.com/lindaifeng/my-images/raw/master/img/818283-20170621182714210-1420612562.png\\",\\"https://gitee.com/lindaifeng/my-images/raw/master/img/818283-20170621183247554-1671875359.png\\",\\"https://gitee.com/lindaifeng/my-images/raw/master/img/818283-20170621183434241-1944183268.png\\"],\\"dateModified\\":\\"2024-09-11T03:57:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"清峰\\",\\"url\\":\\"http://blog.lindaifeng.vip/\\"}]}"]]},"headers":[{"level":2,"title":"二、Mysql5.7 SSL的配置与启用","slug":"二、mysql5-7-ssl的配置与启用","link":"#二、mysql5-7-ssl的配置与启用","children":[]},{"level":2,"title":"三、配置SSL安全认证","slug":"三、配置ssl安全认证","link":"#三、配置ssl安全认证","children":[]}],"git":{"createdTime":1726027079000,"updatedTime":1726027079000,"contributors":[{"name":"ldf","email":"1305366530@qq.com","commits":1}]},"readingTime":{"minutes":3.19,"words":958},"filePathRelative":"database/Mysql数据库/MySql开启SSL安全认证.md","localizedDate":"2024年9月11日","autoDesc":true,"excerpt":"\\n<p><strong>【思考】：为什么要开启ssl认证？</strong></p>\\n<p><strong>SSL</strong>（Secure Socket Layer：安全套接字层）利用数据加密、身份验证和消息完整性验证机制，为基于TCP等可靠连接的应用层协议提供安全性保证。</p>\\n<blockquote>\\n<p>SSL协议提供的功能主要有：</p>\\n<p>1、 数据传输的机密性：利用对称密钥算法对传输的数据进行加密。\\n2.、身份验证机制：基于证书利用数字签名方法对服务器和客户端进行身份验证，其中客户端的身份验证是可选的。\\n3、 消息完整性验证：消息传输过程中使用MAC算法来检验消息的完整性。</p>\\n<p>如果用户的传输不是通过SSL的方式，那么其在网络中数据都是以明文进行传输的，而这给别有用心的人带来了可乘之机。所以，现在很多大型网站都开启了SSL功能。同样地，在我们数据库方面，如果客户端连接服务器获取数据不是使用SSL连接，那么在传输过程中，数据就有可能被窃取。</p>\\n</blockquote>"}');export{o as comp,g as data};
