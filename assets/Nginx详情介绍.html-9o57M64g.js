import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,f as n}from"./app-D1ifS0UH.js";const l={},h=n(`<h3 id="什么是nginx" tabindex="-1"><a class="header-anchor" href="#什么是nginx"><span>什么是Nginx？</span></a></h3><ul><li>Nginx是一个 轻量级/高性能的反向代理Web服务器，他实现非常高效的反向代理、负载平衡，他可以处理2-3万并发连接数，官方监测能支持5万并发，现在中国使用nginx网站用户有很多，例如：新浪、网易、 腾讯等。</li></ul><h3 id="为什么要用nginx" tabindex="-1"><a class="header-anchor" href="#为什么要用nginx"><span>为什么要用Nginx？</span></a></h3><ul><li>跨平台、配置简单、方向代理、高并发连接：处理2-3万并发连接数，官方监测能支持5万并发，内存消耗小：开启10个nginx才占150M内存 ，nginx处理静态文件好，耗费内存少，</li><li>而且Nginx内置的健康检查功能：如果有一个服务器宕机，会做一个健康检查，再发送的请求就不会发送到宕机的服务器了。重新将请求提交到其他的节点上。</li><li>使用Nginx的话还能： <ol><li>节省宽带：支持GZIP压缩，可以添加浏览器本地缓存</li><li>稳定性高：宕机的概率非常小</li><li>接收用户请求是异步的</li></ol></li></ul><h3 id="为什么nginx性能这么高" tabindex="-1"><a class="header-anchor" href="#为什么nginx性能这么高"><span>为什么Nginx性能这么高？</span></a></h3><ul><li>因为他的事件处理机制：异步非阻塞事件处理机制：运用了epoll模型，提供了一个队列，排队解决</li></ul><h3 id="nginx怎么处理请求的" tabindex="-1"><a class="header-anchor" href="#nginx怎么处理请求的"><span>Nginx怎么处理请求的？</span></a></h3><ul><li>nginx接收一个请求后，首先由listen和server_name指令匹配server模块，再匹配server模块里的location，location就是实际地址</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">            		    	# 第一个Server区块开始，表示一个独立的虚拟主机站点</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      listen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">       80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;      		        </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 提供服务的端口，默认80</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      server_name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  localhost</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;    		</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 提供服务的域名主机名</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">            	        # 第一个location区块开始</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">          root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;       		</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 站点的根目录，相当于Nginx的安装目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">          index</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  index.html</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> index.htm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;    	</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 默认的首页文件，多个用空格分开</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      }          				</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 第一个location区块结果</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="什么是正向代理和反向代理" tabindex="-1"><a class="header-anchor" href="#什么是正向代理和反向代理"><span>什么是正向代理和反向代理？</span></a></h3><ol><li>正向代理就是一个人发送一个请求直接就到达了目标的服务器</li><li>反方代理就是请求统一被Nginx接收，nginx反向代理服务器接收到之后，按照一定的规 则分发给了后端的业务处理服务器进行处理了</li></ol><h3 id="使用-反向代理服务器的优点是什么" tabindex="-1"><a class="header-anchor" href="#使用-反向代理服务器的优点是什么"><span>使用“反向代理服务器的优点是什么?</span></a></h3><ul><li>反向代理服务器可以隐藏源服务器的存在和特征。它充当互联网云和web服务器之间的中间层。这对于安全方面来说是很好的，特别是当您使用web托管服务时。</li></ul><h3 id="nginx的优缺点" tabindex="-1"><a class="header-anchor" href="#nginx的优缺点"><span>Nginx的优缺点？</span></a></h3><ul><li>优点： <ol><li>占内存小，可实现高并发连接，处理响应快</li><li>可实现http服务器、虚拟主机、方向代理、负载均衡</li><li>Nginx配置简单</li><li>可以不暴露正式的服务器IP地址</li></ol></li><li>缺点： 动态处理差：nginx处理静态文件好,耗费内存少，但是处理动态页面则很鸡肋，现在一般前端用nginx作为反向代理抗住压力，</li></ul><h3 id="nginx应用场景" tabindex="-1"><a class="header-anchor" href="#nginx应用场景"><span>Nginx应用场景？</span></a></h3><ol><li>http服务器。Nginx是一个http服务可以独立提供http服务。可以做网页静态服务器。</li><li>虚拟主机。可以实现在一台服务器虚拟出多个网站，例如个人网站使用的虚拟机。</li><li>反向代理，负载均衡。当网站的访问量达到一定程度后，单台服务器不能满足用户的请求时，需要用多台服务器集群可以使用nginx做反向代理。并且多台服务器可以平均分担负载，不会应为某台服务器负载高宕机而某台服务器闲置的情况。</li><li>nginz 中也可以配置安全管理、比如可以使用Nginx搭建API接口网关,对每个接口服务进行拦截。</li></ol><h3 id="nginx目录结构有哪些" tabindex="-1"><a class="header-anchor" href="#nginx目录结构有哪些"><span>Nginx目录结构有哪些？</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  [root@localhost ~]# tree /usr/local/nginx</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    /usr/local/nginx</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> client_body_temp</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> conf</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                             # Nginx所有配置文件的目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fastcgi.conf</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                 # fastcgi相关参数的配置文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fastcgi.conf.default</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">         # fastcgi.conf的原始备份文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fastcgi_params</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">               # fastcgi的参数文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fastcgi_params.default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> koi-utf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> koi-win</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mime.types</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                   # 媒体类型</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mime.types.default</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx.conf</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                   # Nginx主配置文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx.conf.default</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> scgi_params</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                  # scgi相关参数文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> scgi_params.default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> uwsgi_params</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                 # uwsgi相关参数文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> uwsgi_params.default</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> win-utf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fastcgi_temp</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                     # fastcgi临时数据目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> html</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                             # Nginx默认站点目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 50x.html</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                     # 错误页面优雅替代显示文件，例如当出现502错误时会调用此页面</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> index.html</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                   # 默认的首页文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logs</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                             # Nginx日志目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> access.log</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                   # 访问日志文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> error.log</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                    # 错误日志文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx.pid</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                    # pid文件，Nginx进程启动后，会把所有进程的ID号写到此文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> proxy_temp</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                       # 临时目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sbin</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                             # Nginx命令目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                        # Nginx的启动命令</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> scgi_temp</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                        # 临时目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> uwsgi_temp</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                       # 临时目录</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nginx配置文件nginx-conf有哪些属性模块" tabindex="-1"><a class="header-anchor" href="#nginx配置文件nginx-conf有哪些属性模块"><span>Nginx配置文件nginx.conf有哪些属性模块?</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  worker_processes</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;                			</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># worker进程的数量</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    events</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                              			# 事件区块开始</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        worker_connections</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  1024</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;          		</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 每个worker进程支持的最大连接数</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }                               			</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 事件区块结束</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    http</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                           			# HTTP区块开始</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       mime.types</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;         			</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Nginx支持的媒体类型库文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        default_type</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  application/octet-stream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;            </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 默认的媒体类型</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        sendfile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;       				</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 开启高效传输模式</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        keepalive_timeout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  65</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;       			</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 连接超时</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">            		                # 第一个Server区块开始，表示一个独立的虚拟主机站点</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            listen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">       80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;      			        </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 提供服务的端口，默认80</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            server_name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  localhost</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;    			</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 提供服务的域名主机名</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">            	        	# 第一个location区块开始</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;       			</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 站点的根目录，相当于Nginx的安装目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                index</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  index.html</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> index.htm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;       	</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 默认的首页文件，多个用空格分开</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }          				        </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 第一个location区块结果</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            error_page</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   500502503504</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  /50x.html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;          </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 出现对应的http状态码时，使用50x.html回应客户</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /50x.html</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">          	        # location区块开始，访问50x.html</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;      		      	        </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 指定对应的站点目录为html</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }  </span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        ......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nginx静态资源" tabindex="-1"><a class="header-anchor" href="#nginx静态资源"><span>Nginx静态资源?</span></a></h3><ul><li>静态资源访问，就是存放在nginx的html页面，我们可以自己编写</li></ul><h3 id="如何用nginx解决前端跨域问题" tabindex="-1"><a class="header-anchor" href="#如何用nginx解决前端跨域问题"><span>如何用Nginx解决前端跨域问题？</span></a></h3><ul><li>使用Nginx转发请求。把跨域的接口写成调本域的接口，然后将这些接口转发到真正的请求地址。</li></ul><h3 id="nginx虚拟主机怎么配置" tabindex="-1"><a class="header-anchor" href="#nginx虚拟主机怎么配置"><span>Nginx虚拟主机怎么配置?</span></a></h3><ul><li>1、基于域名的虚拟主机，通过域名来区分虚拟主机——应用：外部网站</li><li>2、基于端口的虚拟主机，通过端口来区分虚拟主机——应用：公司内部网站，外部网站的管理后台</li><li>3、基于ip的虚拟主机。</li></ul><h4 id="基于虚拟主机配置域名" tabindex="-1"><a class="header-anchor" href="#基于虚拟主机配置域名"><span>基于虚拟主机配置域名</span></a></h4><ul><li>需要建立/data/www /data/bbs目录，windows本地hosts添加虚拟机ip地址对应的域名解析;对应域名网站目录下新增index.html文件;</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">      #当客户端访问www.lijie.com,监听端口号为80,直接跳转到data/www目录下文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            listen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">       80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            server_name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  www.lijie.com</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   data/www</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                index</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  index.html</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> index.htm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        #当客户端访问www.lijie.com,监听端口号为80,直接跳转到data/bbs目录下文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            listen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">       80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            server_name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  bbs.lijie.com</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   data/bbs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                index</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  index.html</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> index.htm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="基于端口的虚拟主机" tabindex="-1"><a class="header-anchor" href="#基于端口的虚拟主机"><span>基于端口的虚拟主机</span></a></h4><ul><li>使用端口来区分，浏览器使用域名或ip地址:端口号 访问</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">      #当客户端访问www.lijie.com,监听端口号为8080,直接跳转到data/www目录下文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            listen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">       8080</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            server_name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  8080.lijie.com</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   data/www</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                index</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  index.html</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> index.htm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    	</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        #当客户端访问www.lijie.com,监听端口号为80直接跳转到真实ip服务器地址 127.0.0.1:8080</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            listen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">       80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            server_name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  www.lijie.com</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    		proxy_pass</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://127.0.0.1:8080</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                    index</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  index.html</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> index.htm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="location的作用是什么" tabindex="-1"><a class="header-anchor" href="#location的作用是什么"><span>location的作用是什么？</span></a></h3><ul><li>location指令的作用是根据用户请求的URI来执行不同的应用，也就是根据用户请求的网站URL进行匹配，匹配成功即进行相关的操作。</li></ul><h4 id="location的语法能说出来吗" tabindex="-1"><a class="header-anchor" href="#location的语法能说出来吗"><span>location的语法能说出来吗？</span></a></h4><blockquote><p>注意：~ 代表自己输入的英文字母</p><table><thead><tr><th style="text-align:center;">匹配符</th><th style="text-align:center;">匹配规则</th><th style="text-align:center;">优先级</th></tr></thead><tbody><tr><td style="text-align:center;">=</td><td style="text-align:center;">精确匹配</td><td style="text-align:center;">1</td></tr><tr><td style="text-align:center;">^~</td><td style="text-align:center;">以某个字符串开头</td><td style="text-align:center;">2</td></tr><tr><td style="text-align:center;">~</td><td style="text-align:center;">区分大小写的正则匹配</td><td style="text-align:center;">3</td></tr><tr><td style="text-align:center;">~*</td><td style="text-align:center;">不区分大小写的正则匹配</td><td style="text-align:center;">4</td></tr><tr><td style="text-align:center;">!~</td><td style="text-align:center;">区分大小写不匹配的正则</td><td style="text-align:center;">5</td></tr><tr><td style="text-align:center;">!~*</td><td style="text-align:center;">不区分大小写不匹配的正则</td><td style="text-align:center;">6</td></tr><tr><td style="text-align:center;">/</td><td style="text-align:center;">通用匹配，任何请求都会匹配到</td><td style="text-align:center;">7</td></tr></tbody></table></blockquote><h4 id="location正则案例" tabindex="-1"><a class="header-anchor" href="#location正则案例"><span>Location正则案例</span></a></h4><ul><li>示例：</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">      #优先级1,精确匹配，根路径</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 400</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        #优先级2,以某个字符串开头,以av开头的，优先匹配这里，区分大小写</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ^~</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /av</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">           root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /data/av/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        #优先级3，区分大小写的正则匹配，匹配/media*****路径</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /media</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">              alias</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /data/static/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        #优先级4 ，不区分大小写的正则匹配，所有的****.jpg|gif|png 都走这里</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jpg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">gif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">png</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">js</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">css</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)$ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">           root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  /data/av/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        #优先7，通用匹配</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 403</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="限流怎么做的" tabindex="-1"><a class="header-anchor" href="#限流怎么做的"><span>限流怎么做的？</span></a></h3><ul><li>Nginx限流就是限制用户请求速度，防止服务器受不了</li><li>限流有3种 <ol><li>正常限制访问频率（正常流量）</li><li>突发限制访问频率（突发流量）</li><li>限制并发连接数</li></ol></li><li>Nginx的限流都是基于漏桶流算法，底下会说道什么是桶铜流</li></ul><p><strong>实现三种限流算法</strong></p><h5 id="_1、正常限制访问频率-正常流量" tabindex="-1"><a class="header-anchor" href="#_1、正常限制访问频率-正常流量"><span>1、正常限制访问频率（正常流量）：</span></a></h5><ul><li>限制一个用户发送的请求，我Nginx多久接收一个请求。</li><li>Nginx中使用ngx_http_limit_req_module模块来限制的访问频率，限制的原理实质是基于漏桶算法原理来实现的。在nginx.conf配置文件中可以使用limit_req_zone命令及limit_req命令限制单个IP的请求处理频率。</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  	#定义限流维度，一个用户一分钟一个请求进来，多余的全部漏掉</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    	limit_req_zone</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $binary_remote_addr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zone=one:10m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rate=1r/m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    	#绑定限流维度</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    	server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    		</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    		location/seckill.html</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    			limit_req</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zone=zone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;	</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    			proxy_pass</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://lj_seckill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    		}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    	}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>1r/s代表1秒一个请求，1r/m一分钟接收一个请求， 如果Nginx这时还有别人的请求没有处理完，Nginx就会拒绝处理该用户请求。</li></ul><h5 id="_2、突发限制访问频率-突发流量" tabindex="-1"><a class="header-anchor" href="#_2、突发限制访问频率-突发流量"><span>2、突发限制访问频率（突发流量）：</span></a></h5><ul><li>限制一个用户发送的请求，我Nginx多久接收一个。</li><li>上面的配置一定程度可以限制访问频率，但是也存在着一个问题：如果突发流量超出请求被拒绝处理，无法处理活动时候的突发流量，这时候应该如何进一步处理呢？Nginx提供burst参数结合nodelay参数可以解决流量突发的问题，可以设置能处理的超过设置的请求数外能额外处理的请求数。我们可以将之前的例子添加burst参数以及nodelay参数：</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  	#定义限流维度，一个用户一分钟一个请求进来，多余的全部漏掉</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    	limit_req_zone</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $binary_remote_addr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zone=one:10m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rate=1r/m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    	#绑定限流维度</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    	server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    		</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    		location/seckill.html</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    			limit_req</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zone=zone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> burst=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nodelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    			proxy_pass</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://lj_seckill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    		}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    	}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>为什么就多了一个 burst=5 nodelay; 呢，多了这个可以代表Nginx对于一个用户的请求会立即处理前五个，多余的就慢慢来落，没有其他用户的请求我就处理你的，有其他的请求的话我Nginx就漏掉不接受你的请求</li></ul><h5 id="_3、-限制并发连接数" tabindex="-1"><a class="header-anchor" href="#_3、-限制并发连接数"><span>3、 限制并发连接数</span></a></h5><ul><li>Nginx中的ngx_http_limit_conn_module模块提供了限制并发连接数的功能，可以使用limit_conn_zone指令以及limit_conn执行进行配置。接下来我们可以通过一个简单的例子来看下：</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      http</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    	limit_conn_zone</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $binary_remote_addr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zone=myip:10m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    	limit_conn_zone</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $server_name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zone=myServerName:10m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                limit_conn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> myip</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                limit_conn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> myServerName</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                rewrite</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://www.xxx.net</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> permanent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>上面配置了单个IP同时并发连接数最多只能10个连接，并且设置了整个虚拟服务器同时最大并发数最多只能100个链接。当然，只有当请求的header被服务器处理后，虚拟服务器的连接数才会计数。刚才有提到过Nginx是基于漏桶算法原理实现的，实际上限流一般都是基于漏桶算法和令牌桶算法实现的。接下来我们来看看两个算法的介绍：</li></ul><h3 id="漏桶流算法和令牌桶算法知道" tabindex="-1"><a class="header-anchor" href="#漏桶流算法和令牌桶算法知道"><span>漏桶流算法和令牌桶算法知道？</span></a></h3><h4 id="漏桶算法" tabindex="-1"><a class="header-anchor" href="#漏桶算法"><span>漏桶算法</span></a></h4><ul><li>漏桶算法是网络世界中流量整形或速率限制时经常使用的一种算法，它的主要目的是控制数据注入到网络的速率，平滑网络上的突发流量。漏桶算法提供了一种机制，通过它，突发流量可以被整形以便为网络提供一个稳定的流量。也就是我们刚才所讲的情况。漏桶算法提供的机制实际上就是刚才的案例：<strong>突发流量会进入到一个漏桶，漏桶会按照我们定义的速率依次处理请求，如果水流过大也就是突发流量过大就会直接溢出，则多余的请求会被拒绝。所以漏桶算法能控制数据的传输速率。</strong></li></ul><figure><img src="http://img.lindaifeng.vip/typora-picgo-tuchaung/jiezuiquanmiandemianshiti_2_1.png" alt="jiezuiquanmiandemianshiti_2_1.png" tabindex="0" loading="lazy"><figcaption>jiezuiquanmiandemianshiti_2_1.png</figcaption></figure><h4 id="令牌桶算法" tabindex="-1"><a class="header-anchor" href="#令牌桶算法"><span>令牌桶算法</span></a></h4><ul><li>令牌桶算法是网络流量整形和速率限制中最常使用的一种算法。典型情况下，令牌桶算法用来控制发送到网络上的数据的数目，并允许突发数据的发送。Google开源项目Guava中的RateLimiter使用的就是令牌桶控制算法。<strong>令牌桶算法的机制如下：存在一个大小固定的令牌桶，会以恒定的速率源源不断产生令牌。如果令牌消耗速率小于生产令牌的速度，令牌就会一直产生直至装满整个令牌桶。</strong></li></ul><figure><img src="http://img.lindaifeng.vip/typora-picgo-tuchaung/jiezuiquanmiandemianshiti_3.png" alt="jiezuiquanmiandemianshiti_3.png" tabindex="0" loading="lazy"><figcaption>jiezuiquanmiandemianshiti_3.png</figcaption></figure><h3 id="为什么要做动静分离" tabindex="-1"><a class="header-anchor" href="#为什么要做动静分离"><span>为什么要做动静分离？</span></a></h3><ul><li>Nginx是当下最热的Web容器，网站优化的重要点在于静态化网站，网站静态化的关键点则是是动静分离，动静分离是让动态网站里的动态网页根据一定规则把不变的资源和经常变的资源区分开来，动静资源做好了拆分以后，我们则根据静态资源的特点将其做缓存操作。</li><li>让静态的资源只走静态资源服务器，动态的走动态的服务器</li><li>Nginx的静态处理能力很强，但是动态处理能力不足，因此，在企业中常用动静分离技术。</li><li>对于静态资源比如图片，js，css等文件，我们则在反向代理服务器nginx中进行缓存。这样浏览器在请求一个静态资源时，代理服务器nginx就可以直接处理，无需将请求转发给后端服务器tomcat。 若用户请求的动态文件，比如servlet,jsp则转发给Tomcat服务器处理，从而实现动静分离。这也是反向代理服务器的一个重要的作用。</li></ul><h3 id="nginx怎么做的动静分离" tabindex="-1"><a class="header-anchor" href="#nginx怎么做的动静分离"><span>Nginx怎么做的动静分离？</span></a></h3><ul><li>只需要指定路径对应的目录。location/可以使用正则表达式匹配。并指定对应的硬盘中的目录。如下：（操作都是在Linux上）</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /image/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   /usr/local/static/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      autoindex</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>创建目录</li></ol><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/static/image</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>进入目录</li></ol><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  /usr/local/static/image</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>放一张照片上去#</li></ol><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1.jpg</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>重启 nginx</li></ol><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reload</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>打开浏览器 输入 server_name/image/1.jpg 就可以访问该静态图片了</li></ol><h3 id="nginx负载均衡的算法怎么实现的-策略有哪些" tabindex="-1"><a class="header-anchor" href="#nginx负载均衡的算法怎么实现的-策略有哪些"><span>Nginx负载均衡的算法怎么实现的?策略有哪些?</span></a></h3><ul><li>为了避免服务器崩溃，大家会通过负载均衡的方式来分担服务器压力。将对台服务器组成一个集群，当用户访问时，先访问到一个转发服务器，再由转发服务器将访问分发到压力更小的服务器。</li><li>Nginx负载均衡实现的策略有以下五种：</li></ul><h4 id="_1-轮询-默认" tabindex="-1"><a class="header-anchor" href="#_1-轮询-默认"><span>1 轮询(默认)</span></a></h4><ul><li>每个请求按时间顺序逐一分配到不同的后端服务器，如果后端某个服务器宕机，能自动剔除故障系统。</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">upstream</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> backserver</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 192.168.x.x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 192.168.x.x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-权重-weight" tabindex="-1"><a class="header-anchor" href="#_2-权重-weight"><span>2 权重 weight</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> weight的值越大分配</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 到的访问概率越高，主要用于后端每台服务器性能不均衡的情况下。其次是为在主从的情况下设置不同的权值，达到合理有效的地利用主机资源。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">upstream</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> backserver</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 192.168.0.x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> weight=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 192.168.0.x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> weight=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  } </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 权重越高，在被访问的概率越大，如上例，分别是20%，80%。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-ip-hash-ip绑定" tabindex="-1"><a class="header-anchor" href="#_3-ip-hash-ip绑定"><span>3 ip_hash( IP绑定)</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 每个请求按访问IP的哈希结果分配，使来自同一个IP的访客固定访问一台后端服务器，\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">并且可以有效解决动态网页存在的session共享问题</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">upstream</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> backserver</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">     ip_hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">     server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 192.168.0.x:x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">     server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 192.168.0.x:x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-fair-第三方插件" tabindex="-1"><a class="header-anchor" href="#_4-fair-第三方插件"><span>4 fair(第三方插件)</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 必须安装upstream_fair模块。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 对比</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> weight、ip_hash更加智能的负载均衡算法，fair算法可以根据页面大小和加载时间长短智能地进行负载均衡，响应时间短的优先分配。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">upstream</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> backserver</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   fair</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  } </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 哪个服务器的响应速度快，就将请求分配到那个服务器上。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-url-hash-第三方插件" tabindex="-1"><a class="header-anchor" href="#_5-url-hash-第三方插件"><span>5 url_hash(第三方插件)</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 必须安装Nginx的hash软件包</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，可以进一步提高后端缓存服务器的效率。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">upstream</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> backserver</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> squid1:3128</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> squid2:3128</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">   hash</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $request_uri</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   hash_method</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> crc32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nginx配置高可用性怎么配置" tabindex="-1"><a class="header-anchor" href="#nginx配置高可用性怎么配置"><span>Nginx配置高可用性怎么配置？</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 当上游服务器</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">真实访问服务器</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">，一旦出现故障或者是没有及时相应的话，应该直接轮训到下一台服务器，保证服务器的高可用</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Nginx配置代码：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">          listen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">       80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">          server_name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  www.lijie.com</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">          location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">          ### 指定上游服务器负载均衡服务器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">          proxy_pass</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://backServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        ###nginx与上游服务器(真实访问的服务器)超时时间 后端服务器连接的超时时间_发起握手等候响应超时时间</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        proxy_connect_timeout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        ###nginx发送给上游服务器(真实访问的服务器)超时时间</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">              proxy_send_timeout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        ### nginx接受上游服务器(真实访问的服务器)超时时间</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">              proxy_read_timeout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">              index</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  index.html</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> index.htm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nginx怎么判断别ip不可访问" tabindex="-1"><a class="header-anchor" href="#nginx怎么判断别ip不可访问"><span>Nginx怎么判断别IP不可访问？</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">如果访问的ip地址为192.168.9.115,则返回403</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$remote_addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = 192.168.9.115) {  </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">     return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 403</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="怎么限制浏览器访问" tabindex="-1"><a class="header-anchor" href="#怎么限制浏览器访问"><span>怎么限制浏览器访问？</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">不允许谷歌浏览器访问</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 如果是谷歌浏览器返回500</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$http_user_agent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ~ Chrome) {   </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rewrite全局变量是什么" tabindex="-1"><a class="header-anchor" href="#rewrite全局变量是什么"><span>Rewrite全局变量是什么？</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |       </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">变量</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        |                             </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">含义</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                             |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">:---------------:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">:----------------------------------------------------------:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |       </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       |         </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">这个变量等于请求行中的参数，同$query_string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |  </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$contentlength</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   |                </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">请求头中的Content-length字段。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$content_type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   |                 </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">请求头中的Content-Type字段。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                 |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |  </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$document_root</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   |                </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">当前请求在root指令中指定的值。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |       </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       |              </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">请求主机头字段，否则为服务器名称。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">              |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; | </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$http_user_agent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |                       </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">客户端agent信息</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$http_cookie</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |                       </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">客户端cookie信息</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                       |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |    </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$limit_rate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |                  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">这个变量可以限制连接速率。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |  </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$request_method</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |             </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">客户端请求的动作，通常为GET或POST。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">              |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$remote_addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |                       </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">客户端的IP地址。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                       |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$remote_port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |                        </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">客户端的端口。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$remote_user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |            </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">已经经过AuthBasicModule验证的用户名。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">             |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; | </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$request_filename</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |     </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">当前请求的文件路径，由root或alias指令与URI请求生成。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |      </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$scheme</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      |                 </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">HTTP方法（如http，https）。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; | </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$server_protocol</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |          </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">请求使用的协议，通常是HTTP/1.0或HTTP/1.1。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$server_addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |       </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">服务器地址，在完成一次系统调用后可以确定这个值。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$server_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |                         </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">服务器名称。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                         |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$server_port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |                   </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">请求到达服务器的端口号。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                   |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$request_uri</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">包含请求参数的原始URI，不包含主机名，如”/foo/bar.php?arg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=baz”。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |       </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$uri</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">不带请求参数的当前URI，$uri不包含主机名，如”/foo/bar.html”。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$document_uri</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   |                         </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">与$uri相同。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                         |</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,97),e=[h];function t(k,p){return a(),s("div",null,e)}const g=i(l,[["render",t],["__file","Nginx详情介绍.html.vue"]]),A=JSON.parse('{"path":"/middleware/Nginx%E6%8A%80%E6%9C%AF/Nginx%E8%AF%A6%E6%83%85%E4%BB%8B%E7%BB%8D.html","title":"Nginx详情介绍","lang":"zh-CN","frontmatter":{"order":1,"title":"Nginx详情介绍","description":"什么是Nginx？ Nginx是一个 轻量级/高性能的反向代理Web服务器，他实现非常高效的反向代理、负载平衡，他可以处理2-3万并发连接数，官方监测能支持5万并发，现在中国使用nginx网站用户有很多，例如：新浪、网易、 腾讯等。 为什么要用Nginx？ 跨平台、配置简单、方向代理、高并发连接：处理2-3万并发连接数，官方监测能支持5万并发，内存消耗...","head":[["meta",{"property":"og:url","content":"http://blog.lindaifeng.vip/middleware/Nginx%E6%8A%80%E6%9C%AF/Nginx%E8%AF%A6%E6%83%85%E4%BB%8B%E7%BB%8D.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"Nginx详情介绍"}],["meta",{"property":"og:description","content":"什么是Nginx？ Nginx是一个 轻量级/高性能的反向代理Web服务器，他实现非常高效的反向代理、负载平衡，他可以处理2-3万并发连接数，官方监测能支持5万并发，现在中国使用nginx网站用户有很多，例如：新浪、网易、 腾讯等。 为什么要用Nginx？ 跨平台、配置简单、方向代理、高并发连接：处理2-3万并发连接数，官方监测能支持5万并发，内存消耗..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://img.lindaifeng.vip/typora-picgo-tuchaung/jiezuiquanmiandemianshiti_2_1.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-22T02:23:17.000Z"}],["meta",{"property":"article:author","content":"清峰"}],["meta",{"property":"article:modified_time","content":"2024-10-22T02:23:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Nginx详情介绍\\",\\"image\\":[\\"http://img.lindaifeng.vip/typora-picgo-tuchaung/jiezuiquanmiandemianshiti_2_1.png\\",\\"http://img.lindaifeng.vip/typora-picgo-tuchaung/jiezuiquanmiandemianshiti_3.png\\"],\\"dateModified\\":\\"2024-10-22T02:23:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"清峰\\",\\"url\\":\\"http://blog.lindaifeng.vip/\\"}]}"]]},"headers":[{"level":3,"title":"什么是Nginx？","slug":"什么是nginx","link":"#什么是nginx","children":[]},{"level":3,"title":"为什么要用Nginx？","slug":"为什么要用nginx","link":"#为什么要用nginx","children":[]},{"level":3,"title":"为什么Nginx性能这么高？","slug":"为什么nginx性能这么高","link":"#为什么nginx性能这么高","children":[]},{"level":3,"title":"Nginx怎么处理请求的？","slug":"nginx怎么处理请求的","link":"#nginx怎么处理请求的","children":[]},{"level":3,"title":"什么是正向代理和反向代理？","slug":"什么是正向代理和反向代理","link":"#什么是正向代理和反向代理","children":[]},{"level":3,"title":"使用“反向代理服务器的优点是什么?","slug":"使用-反向代理服务器的优点是什么","link":"#使用-反向代理服务器的优点是什么","children":[]},{"level":3,"title":"Nginx的优缺点？","slug":"nginx的优缺点","link":"#nginx的优缺点","children":[]},{"level":3,"title":"Nginx应用场景？","slug":"nginx应用场景","link":"#nginx应用场景","children":[]},{"level":3,"title":"Nginx目录结构有哪些？","slug":"nginx目录结构有哪些","link":"#nginx目录结构有哪些","children":[]},{"level":3,"title":"Nginx配置文件nginx.conf有哪些属性模块?","slug":"nginx配置文件nginx-conf有哪些属性模块","link":"#nginx配置文件nginx-conf有哪些属性模块","children":[]},{"level":3,"title":"Nginx静态资源?","slug":"nginx静态资源","link":"#nginx静态资源","children":[]},{"level":3,"title":"如何用Nginx解决前端跨域问题？","slug":"如何用nginx解决前端跨域问题","link":"#如何用nginx解决前端跨域问题","children":[]},{"level":3,"title":"Nginx虚拟主机怎么配置?","slug":"nginx虚拟主机怎么配置","link":"#nginx虚拟主机怎么配置","children":[]},{"level":3,"title":"location的作用是什么？","slug":"location的作用是什么","link":"#location的作用是什么","children":[]},{"level":3,"title":"限流怎么做的？","slug":"限流怎么做的","link":"#限流怎么做的","children":[]},{"level":3,"title":"漏桶流算法和令牌桶算法知道？","slug":"漏桶流算法和令牌桶算法知道","link":"#漏桶流算法和令牌桶算法知道","children":[]},{"level":3,"title":"为什么要做动静分离？","slug":"为什么要做动静分离","link":"#为什么要做动静分离","children":[]},{"level":3,"title":"Nginx怎么做的动静分离？","slug":"nginx怎么做的动静分离","link":"#nginx怎么做的动静分离","children":[]},{"level":3,"title":"Nginx负载均衡的算法怎么实现的?策略有哪些?","slug":"nginx负载均衡的算法怎么实现的-策略有哪些","link":"#nginx负载均衡的算法怎么实现的-策略有哪些","children":[]},{"level":3,"title":"Nginx配置高可用性怎么配置？","slug":"nginx配置高可用性怎么配置","link":"#nginx配置高可用性怎么配置","children":[]},{"level":3,"title":"Nginx怎么判断别IP不可访问？","slug":"nginx怎么判断别ip不可访问","link":"#nginx怎么判断别ip不可访问","children":[]},{"level":3,"title":"怎么限制浏览器访问？","slug":"怎么限制浏览器访问","link":"#怎么限制浏览器访问","children":[]},{"level":3,"title":"Rewrite全局变量是什么？","slug":"rewrite全局变量是什么","link":"#rewrite全局变量是什么","children":[]}],"git":{"createdTime":1729563797000,"updatedTime":1729563797000,"contributors":[{"name":"ldf","email":"1305366530@qq.com","commits":1}]},"readingTime":{"minutes":15.95,"words":4784},"filePathRelative":"middleware/Nginx技术/Nginx详情介绍.md","localizedDate":"2024年10月22日","autoDesc":true,"excerpt":"<h3>什么是Nginx？</h3>\\n<ul>\\n<li>Nginx是一个 轻量级/高性能的反向代理Web服务器，他实现非常高效的反向代理、负载平衡，他可以处理2-3万并发连接数，官方监测能支持5万并发，现在中国使用nginx网站用户有很多，例如：新浪、网易、 腾讯等。</li>\\n</ul>\\n<h3>为什么要用Nginx？</h3>\\n<ul>\\n<li>跨平台、配置简单、方向代理、高并发连接：处理2-3万并发连接数，官方监测能支持5万并发，内存消耗小：开启10个nginx才占150M内存 ，nginx处理静态文件好，耗费内存少，</li>\\n<li>而且Nginx内置的健康检查功能：如果有一个服务器宕机，会做一个健康检查，再发送的请求就不会发送到宕机的服务器了。重新将请求提交到其他的节点上。</li>\\n<li>使用Nginx的话还能：\\n<ol>\\n<li>节省宽带：支持GZIP压缩，可以添加浏览器本地缓存</li>\\n<li>稳定性高：宕机的概率非常小</li>\\n<li>接收用户请求是异步的</li>\\n</ol>\\n</li>\\n</ul>"}');export{g as comp,A as data};
