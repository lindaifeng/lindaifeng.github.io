import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as l,d as s,f as t,o as e,r as p}from"./app-X4Oeetgs.js";const r={},h=s("h1",{id:"_1-springboot概述与入门",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-springboot概述与入门"},[s("span",null,"1. SpringBoot概述与入门")])],-1),k=s("h2",{id:"一、概述",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#一、概述"},[s("span",null,"一、概述")])],-1),d=s("p",null,'SpringBoot是由Pivotal团队提供的框架，用于简化Spring应用的初始搭建以及开发过程。它使用"约定大于配置"的理念，让开发者可以专注于业务逻辑而不是配置文件。',-1),o=t(`<h2 id="二、知识要点" tabindex="-1"><a class="header-anchor" href="#二、知识要点"><span>二、知识要点</span></a></h2><h3 id="_1-springboot的核心特性" tabindex="-1"><a class="header-anchor" href="#_1-springboot的核心特性"><span>1. SpringBoot的核心特性</span></a></h3><ul><li><strong>简化配置</strong>：告别繁琐的XML配置，使用注解和properties/yaml文件进行配置</li><li><strong>嵌入式服务器</strong>：内置Tomcat、Jetty、Undertow等服务器，无需单独部署</li><li><strong>自动装配</strong>：根据引入的依赖自动配置Spring应用</li><li><strong>生产就绪特性</strong>：提供指标、健康检查和外部配置等特性</li><li><strong>无代码生成和XML配置</strong>：完全基于Java代码和注解</li></ul><h3 id="_2-第一个springboot应用" tabindex="-1"><a class="header-anchor" href="#_2-第一个springboot应用"><span>2. 第一个SpringBoot应用</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 主启动类</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">SpringBootApplication</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        SpringApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, args);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 控制器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">RestController</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> HelloController</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">RequestMapping</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/hello&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Hello, SpringBoot!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-项目结构" tabindex="-1"><a class="header-anchor" href="#_3-项目结构"><span>3. 项目结构</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>src</span></span>
<span class="line"><span>├── main</span></span>
<span class="line"><span>│   ├── java</span></span>
<span class="line"><span>│   │   └── com</span></span>
<span class="line"><span>│   │       └── example</span></span>
<span class="line"><span>│   │           └── demo</span></span>
<span class="line"><span>│   │               ├── Application.java</span></span>
<span class="line"><span>│   │               └── controller</span></span>
<span class="line"><span>│   │                   └── HelloController.java</span></span>
<span class="line"><span>│   └── resources</span></span>
<span class="line"><span>│       ├── application.properties</span></span>
<span class="line"><span>│       ├── static</span></span>
<span class="line"><span>│       └── templates</span></span>
<span class="line"><span>└── test</span></span>
<span class="line"><span>    └── java</span></span>
<span class="line"><span>        └── com</span></span>
<span class="line"><span>            └── example</span></span>
<span class="line"><span>                └── demo</span></span>
<span class="line"><span>                    └── ApplicationTests.java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-依赖管理" tabindex="-1"><a class="header-anchor" href="#_4-依赖管理"><span>4. 依赖管理</span></a></h3><p>SpringBoot使用父项目进行依赖管理，指定了常用依赖的版本号，避免版本冲突。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-parent&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;2.7.5&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-web&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-test&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;test&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、知识扩展" tabindex="-1"><a class="header-anchor" href="#三、知识扩展"><span>三、知识扩展</span></a></h2><h3 id="_1-设计思想" tabindex="-1"><a class="header-anchor" href="#_1-设计思想"><span>1. 设计思想</span></a></h3><ul><li><strong>约定大于配置</strong>：通过默认配置减少开发者的配置工作</li><li><strong>开箱即用</strong>：提供各种 starters 依赖，引入即可使用</li><li><strong>微服务友好</strong>：非常适合构建微服务架构</li><li><strong>持续集成友好</strong>：支持自动化测试和构建</li></ul><h3 id="_2-避坑指南" tabindex="-1"><a class="header-anchor" href="#_2-避坑指南"><span>2. 避坑指南</span></a></h3><ul><li>不要随意修改SpringBoot父项目的版本，可能导致依赖冲突</li><li>不要忽略application.properties/yaml文件的缩进和格式</li><li>不要在主启动类所在包的上层放置其他类，可能导致扫描不到</li><li>不要忘记添加@SpringBootApplication注解</li></ul><h3 id="_3-深度思考题" tabindex="-1"><a class="header-anchor" href="#_3-深度思考题"><span>3. 深度思考题</span></a></h3><p><strong>思考题:</strong> SpringBoot和Spring有什么区别？ ** 回答:** Spring是一个开源的轻量级Java开发框架，提供了IOC和AOP等核心特性。而SpringBoot是基于Spring的框架，它简化了Spring应用的初始搭建和开发过程，提供了自动装配、嵌入式服务器等特性，让开发者可以更专注于业务逻辑。</p><p>** 思考题:** 什么是SpringBoot的starter？ ** 回答:** SpringBoot的starter是一组预配置的依赖，它包含了某个功能所需的所有依赖，例如spring-boot-starter-web包含了web开发所需的所有依赖。引入starter后，SpringBoot会自动配置相关的组件。</p>`,18);function g(c,B){const i=p("Mermaid");return e(),a("div",null,[h,k,d,l(i,{id:"mermaid-9",code:"eJxLL0osyFAIceFSAALH6OCCosy8dKf8/JJYBV1dOwWn6OfrGp72THvZ2vt877pYiCqwjHP00609T1uXPt3T/2xO79OuhU9nrkCWd4l+0b7qadeKF4tbgZqRZVyjn0+Z/2TX8qcbNj7fvep5585nDctjucAKknMSi4tdUtMUikuKSpNLSotSFdIyc3KslE2cHd1MDXSAwvnZqVbKxhYWrsbOOsn5OflFVuUZmSWp1gj9QGvg2pGFnXScdVx0XBUSc9LzizJLMnKtuQAF32D1"}),o])}const y=n(r,[["render",g],["__file","1. SpringBoot概述与入门.html.vue"]]),m=JSON.parse('{"path":"/frame/springboot/1.%20SpringBoot%E6%A6%82%E8%BF%B0%E4%B8%8E%E5%85%A5%E9%97%A8.html","title":"1. SpringBoot概述与入门","lang":"zh-CN","frontmatter":{"description":"1. SpringBoot概述与入门 一、概述 SpringBoot是由Pivotal团队提供的框架，用于简化Spring应用的初始搭建以及开发过程。它使用\\"约定大于配置\\"的理念，让开发者可以专注于业务逻辑而不是配置文件。 二、知识要点 1. SpringBoot的核心特性 简化配置：告别繁琐的XML配置，使用注解和properties/yaml文件进...","head":[["meta",{"property":"og:url","content":"http://blog.lindaifeng.vip/frame/springboot/1.%20SpringBoot%E6%A6%82%E8%BF%B0%E4%B8%8E%E5%85%A5%E9%97%A8.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"1. SpringBoot概述与入门"}],["meta",{"property":"og:description","content":"1. SpringBoot概述与入门 一、概述 SpringBoot是由Pivotal团队提供的框架，用于简化Spring应用的初始搭建以及开发过程。它使用\\"约定大于配置\\"的理念，让开发者可以专注于业务逻辑而不是配置文件。 二、知识要点 1. SpringBoot的核心特性 简化配置：告别繁琐的XML配置，使用注解和properties/yaml文件进..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-04T08:30:59.000Z"}],["meta",{"property":"article:author","content":"清峰"}],["meta",{"property":"article:modified_time","content":"2025-07-04T08:30:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1. SpringBoot概述与入门\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-04T08:30:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"清峰\\",\\"url\\":\\"http://blog.lindaifeng.vip/\\"}]}"]]},"headers":[{"level":2,"title":"一、概述","slug":"一、概述","link":"#一、概述","children":[]},{"level":2,"title":"二、知识要点","slug":"二、知识要点","link":"#二、知识要点","children":[{"level":3,"title":"1. SpringBoot的核心特性","slug":"_1-springboot的核心特性","link":"#_1-springboot的核心特性","children":[]},{"level":3,"title":"2. 第一个SpringBoot应用","slug":"_2-第一个springboot应用","link":"#_2-第一个springboot应用","children":[]},{"level":3,"title":"3. 项目结构","slug":"_3-项目结构","link":"#_3-项目结构","children":[]},{"level":3,"title":"4. 依赖管理","slug":"_4-依赖管理","link":"#_4-依赖管理","children":[]}]},{"level":2,"title":"三、知识扩展","slug":"三、知识扩展","link":"#三、知识扩展","children":[{"level":3,"title":"1. 设计思想","slug":"_1-设计思想","link":"#_1-设计思想","children":[]},{"level":3,"title":"2. 避坑指南","slug":"_2-避坑指南","link":"#_2-避坑指南","children":[]},{"level":3,"title":"3. 深度思考题","slug":"_3-深度思考题","link":"#_3-深度思考题","children":[]}]}],"git":{"createdTime":1751617859000,"updatedTime":1751617859000,"contributors":[{"name":"ldf","email":"1305366530@qq.com","commits":1}]},"readingTime":{"minutes":2.35,"words":706},"filePathRelative":"frame/springboot/1. SpringBoot概述与入门.md","localizedDate":"2025年7月4日","autoDesc":true,"excerpt":"\\n<h2>一、概述</h2>\\n<p>SpringBoot是由Pivotal团队提供的框架，用于简化Spring应用的初始搭建以及开发过程。它使用\\"约定大于配置\\"的理念，让开发者可以专注于业务逻辑而不是配置文件。</p>\\n<h2>二、知识要点</h2>\\n<h3>1. SpringBoot的核心特性</h3>\\n<ul>\\n<li><strong>简化配置</strong>：告别繁琐的XML配置，使用注解和properties/yaml文件进行配置</li>\\n<li><strong>嵌入式服务器</strong>：内置Tomcat、Jetty、Undertow等服务器，无需单独部署</li>\\n<li><strong>自动装配</strong>：根据引入的依赖自动配置Spring应用</li>\\n<li><strong>生产就绪特性</strong>：提供指标、健康检查和外部配置等特性</li>\\n<li><strong>无代码生成和XML配置</strong>：完全基于Java代码和注解</li>\\n</ul>"}');export{y as comp,m as data};
